Java四种引用类型
只有强引用FinalReference类是包内可见，其他三种引用类型均有public，可以在应用程序中直接使用。

1.强引用（StrongReference）
强引用时使用最普遍的引用，如果一个对象具有强引用，那么垃圾回收器绝对不会回收它，当内存空间不足时，
Java虚拟机宁愿抛出OutOfMemoryError也不愿意回收具有强引用的对象来解决内存不足的问题；

2.软引用（SoftReference）
如果一个对象只具有软引用，则内存空间足够，垃圾回收器便不会回收它，如果内存空间不足，那么垃圾回收器
就会回收这些对象的内存，只要垃圾回收器没有回收它，该对象就可以被对象使用。软引用可以用于实现内存
敏感的高速缓存；

3.弱引用（WeakReference）
只具有弱引用的对象的生命周期更短，垃圾回收器一旦发现就只有弱引用的对象，不管当前内存是否足够，
都会将其回收，但是垃圾回收器是一个优先级很低的线程，不一定很快的发现那些只有弱引用的对象，弱引用
可用于解决内存泄漏的问题；

4.虚引用
虚引用与其他几种引用都不同，虚引用并不会决定对象的生命周期。如果一个对象爱你个仅持有虚引用，那么
它就和没有任何引用一样，在任何时候都可能被垃圾回收器回收，虚引用主要用来跟踪对象被垃圾回收器回收的活动。
虚引用必须和引用队列联合使用。垃圾回收器回收对象时，该对象还有虚引用，就会在回收对象的内存之前，把这个
虚引用加入到与之关联的引用队列中。